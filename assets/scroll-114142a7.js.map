{"version":3,"file":"scroll-114142a7.js","sources":["../../src/js/get-api.js","../../src/js/card.js","../../src/js/header.js","../../src/js/filters.js","../../src/js/modal-product.js","../../src/js/products.js","../../src/js/pagination.js","../../src/js/popular.js","../../src/js/discount/api/discount-api.js","../../src/js/discount/api/storage.js","../../src/js/discount/markup-discount.js","../../src/js/discount/discount.js","../../src/js/scroll.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://food-boutique.b.goit.study/api/';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getProductsCategories() {\n  const response = await axios.get(`${BASE_URL}products/categories`);\n\n  return response.data;\n}\n\nexport async function getProductsByParams({\n  keyword,\n  category,\n  page,\n  limit,\n  sort,\n} = {}) {\n  const params = {\n    keyword,\n    category,\n    page,\n    limit,\n  };\n\n  if (sort && sort.key && sort.value) {\n    params[sort.key] = sort.value;\n  }\n\n  const response = await axios.get(`${BASE_URL}products`, { params });\n\n  return response.data;\n}\n\nexport async function getProductById(id) {\n  const response = await axios.get(`${BASE_URL}products/${id}`);\n\n  return response.data;\n}\n\nexport async function getPopularProducts(limit) {\n  const response = await axios.get(`${BASE_URL}products/popular`, {\n    params: { limit },\n  });\n\n  return response.data;\n}\n\nexport async function getDiscountProducts() {\n  const response = await axios.get(`${BASE_URL}products/discount`);\n\n  return response.data;\n}\n\nexport async function orderSubscriptionToNewProducts(email) {\n  const response = await axios.post(`${BASE_URL}subscription/`, {\n    email,\n  });\n\n  return response.data;\n}\n\nexport async function createNewOrder(email, [{ productId, amount }]) {\n  const response = await axios.post(`${BASE_URL}orders`, {\n    email,\n    products: [\n      {\n        productId,\n        amount,\n      },\n    ],\n  });\n\n  return response.data;\n}\n","import axios from 'axios';\nimport { createNewOrder } from './get-api';\n// // new\n\n\nconst STORAGE_KEY = 'added-item';\nlet dataForm = [];\n\nconst itemCount = document.querySelector('.js-item-count');\nconst emptyBasket = document.querySelector('.js-empty-basket');\nconst filledBasket = document.querySelector('.js-filled-basket');\nconst itemsContainer = document.querySelector('.js-items-container');\nconst totalSum = document.querySelector('.total-count-text');\nconst checkoutForm = document.querySelector('.checkout-form');\n\n// checkoutForm.addEventListener('submit', onSubmit);\n\n// addLocalStorageData();\n\n// function addLocalStorageData() {\n//   dataForm = [\n//     {\n//       _id: '640c2dd963a319ea671e37d4',\n//       name: 'Banana',\n//       img: 'https://ftp.goit.study/img/so-yummy/ingredients/640c2dd963a319ea671e37d4.png',\n//       category: 'Fresh_Produce',\n//       price: 0.69,\n//       size: '1 piece',\n//       is10PercentOff: true,\n//       popularity: 108,\n//     },\n//     {\n//       _id: '640c2dd963a319ea671e383b',\n//       name: 'Ackee',\n//       img: 'https://ftp.goit.study/img/so-yummy/ingredients/640c2dd963a319ea671e383b.png',\n//       category: 'Fresh_Produce',\n//       price: 8.99,\n//       size: '16 oz',\n//       is10PercentOff: false,\n//       popularity: 0,\n//     },\n//     {\n//       _id: '640c2dd963a319ea671e3864',\n//       name: 'Black Beans',\n//       img: 'https://ftp.goit.study/img/so-yummy/ingredients/640c2dd963a319ea671e3864.png',\n//       category: 'Pantry_Items',\n//       price: 1.99,\n//       size: '16oz',\n//       is10PercentOff: false,\n//       popularity: 0,\n//     },\n//     {\n//       _id: '640c2dd963a319ea671e37ad',\n//       name: 'Black Olives',\n//       img: 'https://ftp.goit.study/img/so-yummy/ingredients/640c2dd963a319ea671e37ad.png',\n//       category: 'Fresh_Produce',\n//       price: 3.99,\n//       size: '1 jar (16 oz)',\n//       is10PercentOff: false,\n//       popularity: 0,\n//     },\n//   ];\n//   localStorage.setItem(STORAGE_KEY, JSON.stringify(dataForm));\n// }\n\n// onLoad();\n\n// function onLoad() {\n//   try {\n//     const data = localStorage.getItem(STORAGE_KEY);\n//     if (!data) return;\n//     dataForm = JSON.parse(data);\n//     const basketItemAdded = dataForm.length;\n//     itemCount.textContent = basketItemAdded;\n//     isBasketEmpty(basketItemAdded);\n//     itemsContainer.innerHTML = basketItemsMarkup(dataForm);\n//     totalSum.textContent = `$${totalSumCount(dataForm)}`;\n//   } catch (error) {\n//     // add notifix message about something wrong\n//     console.log(error.message);\n//   }\n// }\n\n// function isBasketEmpty(itemAdded) {\n//   if (itemAdded === 0) {\n//     emptyBasket.classList.remove('hide');\n//     filledBasket.classList.add('hide');\n//     return;\n//   } else {\n//     emptyBasket.classList.add('hide');\n//     filledBasket.classList.remove('hide');\n//   }\n// }\n\n// function basketItemsMarkup(array) {\n//   console.log(array);\n//   return array\n//     .map(\n//       ({ _id: id, name, img, category, size, is10PercentOff, price }) =>\n//         `<li class=\"item-container\" data-id=\"${id}\">\n//           <a class=\"item-img-link\" href=\"\">\n//             <img class=\"item-img\" src=\"${img}\" alt=\"${name}\" loading=\"lazy\"/>\n//           </a>\n//           <div class=\"item-info\">\n//             <div class=\"item-title-container\">\n//               <h4 class=\"item-title\">${name}</h4>\n//               <button type=\"button\" class=\"delete-item-button\">\n//                 <svg class=\"delete-item-icon\" width=\"20\" height=\"20\">\n//                   <use href=\"./images/icons1.svg#delete-icon\"></use>\n//                   <!-- <use href=\"./images/icons.svg#delete-icon\"></use> -->\n//                 </svg>\n//               </button>\n//             </div>\n//             <ul class=\"item-parameter-list\">\n//               <li class=\"item-category\">Category:</li>\n//               <li class=\"item-parameter\">${category}</li>\n//               <li class=\"item-category\">Size:</li>\n//               <li class=\"item-parameter\">${size}</li>\n//             </ul>\n//             <p class=\"item-price\">$${price}</p>\n//           </div>\n//         </li>`\n//     )\n//     .join('');\n// }\n\n// function totalSumCount(array) {\n//   let totalPrice = 0;\n//   let count = 1;\n//   array.forEach(({ price }) => {\n//     totalPrice += price * count;\n//   });\n//   return totalPrice;\n// }\n\n// async function onSubmit(event) {\n//   try {\n//     event.preventDefault();\n//     const email = event.target.elements.email.value;\n//     let order = [];\n//     // if count abcent than 1\n//     dataForm.forEach(({ _id: productId, amount  = 1 }) => {\n//       order.push({ productId, amount });\n//     });\n//     const apiResponse = await createNewOrder(email, order);\n//     console.log(apiResponse);\n//   } catch (error) {\n//     // add notifix message about something wrong\n//     console.log(error.message);\n//   }\n// }\n\n// const BASE_URL = 'https://food-boutique.b.goit.study/api/';\n// axios.defaults.baseURL = BASE_URL;\n\n// async function createNewOrder(email, products) {\n//   return await axios\n//     .post(`${BASE_URL}orders`, {\n//       email,\n//       products\n//     })\n//     .then(response => response.data);\n// }\n\n\n","const countProducts = document.getElementById('countProducts');\n// countProducts.innerHTML = `cart (${10})`;\nlet count = 0;\ndocument.getElementById('cartLink').addEventListener('click', () => {\n  countProducts.innerHTML = `cart (${++count})`;\n});\n\nconst newWord = 'Java Script';\nconsole.log(newWord.length - 1);\nconsole.log(newWord[newWord.length]);\n","// import { getProductsByParams, getProductsCategories } from './get-api';\n// import { createCardMarkup, displayProducts } from './products';\n\nconst URL_BASE = 'https://food-boutique.b.goit.study/api/';\n\nfunction getCategories() {\n  return fetch(`${URL_BASE}products/categories`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction getByParams(keyword, category, page, limit, sort) {\n  const params = new URLSearchParams({\n    keyword: keyword,\n    category: category,\n    page: page,\n    limit: limit,\n  });\n\n  if (sort && sort.key && sort.value) {\n    params[sort.key] = sort.value;\n  }\n\n  return fetch(`${URL_BASE}products`, { params }).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nconst productsListFilter = document.querySelector('.list-prod');\nconst filterForm = document.querySelector('.filter-form');\nconst filterSearchInput = document.querySelector('input');\nconst filterSelect = document.querySelector('.filter-select');\nconst filterSort = document.querySelector('.filter-sort');\n\nexport function createCard(results) {\n  if (!Array.isArray(results)) {\n    console.error('Invalid results:', results);\n    return '';\n  }\n  return results\n    .map(({ _id, name, img, category, size, price, popularity }) => {\n      return `\n        <li class=\"prod-item\" data-js-product-id=${_id}>   \n          <div class=\"prod-pic\">\n            <svg class=\"discont-prod\" width=\"60\" height=\"60\" style=\"visibility: hidden;\">\n              <use href=\"./images/icons.svg#shopping-cart\"></use>\n            </svg>\n            <img class=\"prod-img\" src=${img} alt=${name} loading=\"lazy\">\n          </div>\n          <h3 class=\"title-prod\">${name}</h3>\n          <div class=\"feature\">\n            <p class=\"feature-prod\">Category:<span class=\"feature-value\">${category}</span></p>\n            <p class=\"feature-prod\">Size:<span class=\"feature-value\">${size}</span></p>\n            <p class=\"feature-prod push\">Popularity:<span class=\"feature-value\">${popularity}</span></p>\n          </div>\n          <div class=\"buing-prod\">\n            <p class=\"price-prod\">&#36; ${price}</p>\n            <button class=\"buy-btn\" type=\"button\">\n              <svg class=\"buy-svg\" width=\"18\" height=\"18\">\n                <use href=\"./images/icons.svg#shopping-cart\"></use>\"></use>\n              </svg>\n            </button>\n          </div>\n        </li>\n      `;\n    })\n    .join('');\n}\n\nasync function initialize() {\n  try {\n    const categories = await getCategories();\n\n    let showAllOption = document.createElement('option');\n    showAllOption.innerHTML = 'Show all';\n    filterSelect.appendChild(showAllOption);\n\n    categories.forEach(category => {\n      const option = document.createElement('option');\n      option.value = category;\n      option.text = category;\n      filterSelect.appendChild(option);\n    });\n\n    filterSelect.addEventListener('change', async function () {\n      updateLocalStorage({\n        ...getLocalStorage(),\n        category: this.value === 'Show all' ? null : this.value,\n        page: 1,\n      });\n\n      const storedData = getLocalStorage();\n      const products = await getByParams(storedData);\n      console.log(products);\n      productsListFilter.innerHTML = createCard(products);\n    });\n\n    const initialData = getLocalStorage();\n    const initialProducts = await getByParams(initialData);\n\n    productsListFilter.innerHTML = createCard(initialProducts);\n  } catch (error) {\n    console.error('Initialization error:', error);\n  }\n}\n\nfilterForm.addEventListener('submit', async function (e) {\n  e.preventDefault();\n  const searchQuery = this.elements.searchQuery.value\n    .trim()\n    .toLowerCase()\n    .split(' ');\n  const category = this.elements.categories.value;\n  this.elements.searchQuery.value = searchQuery ? searchQuery : '';\n  updateLocalStorage({\n    keyword: searchQuery,\n    category: category === 'Show all' ? null : category,\n    page: 1,\n    limit: 6,\n  });\n\n  const storedData = getLocalStorage();\n  const products = await getByParams(storedData);\n\n  productsListFilter.innerHTML = createCardMarkup(products);\n  this.elements.searchQuery.value = '';\n});\n\nfunction updateLocalStorage(data) {\n  localStorage.setItem('filterData', JSON.stringify(data));\n}\n\nfunction getLocalStorage() {\n  const storedData = localStorage.getItem('filterData');\n  return storedData\n    ? JSON.parse(storedData)\n    : { keyword: null, category: null, page: 1, limit: 6 };\n}\n\ninitialize();\n\n// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://food-boutique.b.goit.study/api/products';\n\n// async function getCategories() {\n//   try {\n//     const response = await axios.get(`/categories`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching product categories:', error);\n//     throw error;\n//   }\n// }\n\n// async function getByParams(keyword, category, page, limit, sort) {\n//   try {\n//     const params = {\n//       keyword: keyword,\n//       category: category,\n//       page: page,\n//       limit: limit,\n//     };\n\n//     if (sort && sort.key && sort.value) {\n//       params[sort.key] = sort.value;\n//     }\n\n//     const response = await axios.get(``, { params: params });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching products:', error);\n//     throw error;\n//   }\n// }\n\n// const productsListFilter = document.querySelector('.list-prod');\n// const filterForm = document.querySelector('.filter-form');\n// const filterSearchInput = document.querySelector('input');\n// const filterSelect = document.querySelector('.filter-select');\n// const filterSort = document.querySelector('.filter-sort');\n\n// async function initialize() {\n//   try {\n//     const categories = await getCategories();\n\n//     let showAllOption = document.createElement('option');\n//     showAllOption.innerHTML = 'Show all';\n//     filterSelect.appendChild(showAllOption);\n\n//     categories.forEach(category => {\n//       const option = document.createElement('option');\n//       option.value = category;\n//       option.text = category;\n//       filterSelect.appendChild(option);\n//     });\n\n//     filterSelect.addEventListener('change', async function () {\n//       updateLocalStorage({\n//         ...getLocalStorage(),\n//         category: this.value === 'Show all' ? null : this.value,\n//         page: 1,\n//       });\n\n//       const storedData = getLocalStorage();\n//       const products = await getByParams(storedData);\n\n//       productsListFilter.innerHTML = createCardMarkup(products);\n//     });\n\n//     const initialData = getLocalStorage();\n//     const initialProducts = await getByParams(initialData);\n\n//     productsListFilter.innerHTML = createCardMarkup(initialProducts);\n//   } catch (error) {\n//     console.error('Initialization error:', error);\n//   }\n// }\n\n// filterForm.addEventListener('submit', async function (e) {\n//   e.preventDefault();\n//   const searchQuery = this.elements.searchQuery.value\n//     .trim()\n//     .toLowerCase()\n//     .split(' ');\n//   const category = this.elements.categories.value;\n//   this.elements.searchQuery.value = searchQuery ? searchQuery : '';\n//   updateLocalStorage({\n//     keyword: searchQuery,\n//     category: category === 'Show all' ? null : category,\n//     page: 1,\n//     limit: 6,\n//   });\n\n//   const storedData = getLocalStorage();\n//   const products = await getByParams(storedData);\n\n//   productsListFilter.innerHTML = createCardMarkup(products);\n//   this.elements.searchQuery.value = '';\n// });\n\n// function updateLocalStorage(data) {\n//   localStorage.setItem('filterData', JSON.stringify(data));\n// }\n\n// function getLocalStorage() {\n//   const storedData = localStorage.getItem('filterData');\n//   return storedData\n//     ? JSON.parse(storedData)\n//     : { keyword: null, category: null, page: 1, limit: 6 };\n// }\n\n// // Call the initialize function to start the process\n// initialize();\n\n// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://food-boutique.b.goit.study/api/products';\n\n// async function getCategories() {\n//   try {\n//     const response = await axios.get(`/categories`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching product categories:', error);\n//     throw error;\n//   }\n// }\n\n// async function getByParams(keyword, category, page, limit, sort) {\n//   try {\n//     const params = {\n//       keyword: keyword,\n//       category: category,\n//       page: page,\n//       limit: limit,\n//     };\n\n//     if (sort && sort.key && sort.value) {\n//       params[sort.key] = sort.value;\n//     }\n\n//     const response = await axios.get(``, { params: params });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching products:', error);\n//     throw error;\n//   }\n// }\n\n// const productsListFilter = document.querySelector('.list-prod');\n// const filterForm = document.querySelector('.filter-form');\n// const filterSearchInput = document.querySelector('input');\n// const filterSelect = document.querySelector('.filter-select');\n// const filterSort = document.querySelector('.filter-sort');\n\n// filterForm.addEventListener('submit', async function (e) {\n//   e.preventDefault();\n//   const searchQuery = this.elements.searchQuery.value\n//     .trim()\n//     .toLowerCase()\n//     .split(' ');\n//   const category = this.elements.categories.value;\n//   this.elements.searchQuery.value = searchQuery ? searchQuery : '';\n//   updateLocalStorage({\n//     keyword: searchQuery,\n//     category: category === 'Show all' ? null : category,\n//     page: 1,\n//     limit: 6,\n//   });\n\n//   const storedData = getLocalStorage();\n\n//   const products = await getByParams(storedData);\n\n//   productsListFilter.innerHTML = createCardMarkup(products);\n//   this.elements.searchQuery.value = '';\n// });\n\n// function updateLocalStorage(data) {\n//   localStorage.setItem('filterData', JSON.stringify(data));\n// }\n\n// function getLocalStorage() {\n//   const storedData = localStorage.getItem('filterData');\n//   return storedData\n//     ? JSON.parse(storedData)\n//     : { keyword: null, category: null, page: 1, limit: 6 };\n// }\n\n// const categories = getCategories();\n\n// let showAllOption = document.createElement('option');\n// showAllOption.innerHTML = 'Show all';\n// filterSelect.appendChild(showAllOption);\n\n// categories.forEach(category => {\n//   const option = document.createElement('option');\n//   option.value = category;\n//   option.text = category;\n//   filterSelect.appendChild(option);\n// });\n\n// filterSelect.addEventListener('change', async function () {\n//   updateLocalStorage({\n//     ...getLocalStorage(),\n//     category: this.value === 'Show all' ? null : this.value,\n//     page: 1,\n//   });\n\n//   const storedData = getLocalStorage();\n\n//   const products = getByParams(storedData);\n\n//   productsListFilter.innerHTML = createCardMarkup(products);\n// });\n\n// const initialData = getLocalStorage();\n// const initialProducts = getByParams(initialData);\n\n// productsListFilter.innerHTML = createCardMarkup(initialProducts);\n","// modal-product.js\n\nconst modalProduct = document.getElementById('modalProduct');\nconst closeModalProductBtn = document.getElementById('closeModalProductBtn');\nconst addToCartBtn = document.getElementById('addToCartBtn');\nconst modalProductImage = document.getElementById('modalProductImage');\nconst modalProductName = document.getElementById('modalProductName');\nconst modalProductCategory = document.getElementById('modalProductCategory');\nconst modalProductSize = document.getElementById('modalProductSize');\nconst modalProductPopularity = document.getElementById('modalProductPopularity');\nconst modalProductDescription = document.getElementById('modalProductDescription');\nconst modalProductPrice = document.getElementById('modalProductPrice');\n\nexport function openModal(product) {\n    if (!product || !product.img) {\n        console.error('Product data is missing or incomplete.');\n        return;\n    }\n    // console.log(product); \n\n    modalProductImage.src = product.img;\n    modalProductName.textContent = product.name;\n    modalProductCategory.textContent = `Category: ${product.category}`;\n    modalProductSize.textContent = `Size: ${product.size}`;\n    modalProductPopularity.textContent = `Popularity: ${product.popularity}`;\n    modalProductDescription.textContent = product.description;\n    modalProductPrice.textContent = `Price: ${product.price}`;\n\n    document.body.style.overflow = 'hidden';\n    modalProduct.style.display = 'block';\n    window.addEventListener('click', outsideModalClick);\n}\n\nfunction closeModal() {\n    document.body.style.overflow = '';\n    modalProduct.style.display = 'none';\n    window.removeEventListener('click', outsideModalClick);\n}\n\n// Event listeners\ncloseModalProductBtn.addEventListener('click', closeModal);\n\n// Close the modal if the user clicks outside of it\nwindow.addEventListener('click', function (event) {\n    if (event.target === modalProduct) {\n        closeModal();\n    }\n});\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n        closeModal();\n    }\n});\n\nfunction outsideModalClick(event) {\n    if (event.target === modalProduct) {\n        closeModal();\n    }\n}\n// Close the modal if the user clicks outside of it\nwindow.addEventListener('click', function (event) {\n    if (event.target === modalProduct) {\n        closeModal();\n    }\n});\n\n// Add product to cart logic\naddToCartBtn.addEventListener('click', function () {\n    // Implement logic to add the product to the cart and update the UI\n    // You can use localStorage to store the cart information\n    // Example:\n    // const productId = product.id;\n    // const cart = JSON.parse(localStorage.getItem('cart')) || {};\n    // cart[productId] = (cart[productId] || 0) + 1;\n    // localStorage.setItem('cart', JSON.stringify(cart));\n\n    // After updating the cart, you might want to close the modal\n    closeModal();\n});","import { getProductsByParams } from './get-api';\n\nimport { openModal } from './modal-product';\n\nconst productsList = document.querySelector('.list-prod');\n\nconst defaultParameters = {\n  keyword: '',\n  category: '',\n  page: 1,\n  limit: 9,\n};\n\n// ________________\n\n// export function saveData(data) {\n//   localStorage.setItem('defaultParameters', JSON.stringify(defaultParameters));\n// }\n\n// export function getData() {\n//   try {\n//     const result = localStorage.getItem('defaultParameters');\n//     return result ? JSON.parse(result) : {};\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// saveData();\n\n// // _______________________________\n\nexport function addMarkup(el, markup) {\n  el.innerHTML = markup;\n}\n\nasync function displayProducts(pageNumber) {\n  try {\n    defaultParameters.page = pageNumber;\n    const { results } = await getProductsByParams(defaultParameters);\n    console.log('Products:', results); // Додайте цей рядок\n    const markup = createCardMarkup(results);\n    addMarkup(productsList, markup);\n\n    const productCards = document.querySelectorAll('.prod-item');\n    productCards.forEach(card => {\n      card.addEventListener('click', () => {\n        const productId = card.getAttribute('data-js-product-id');\n        // console.log('Selected productId:', productId);\n        const selectedProduct = results.find(\n          product => product._id.toString() === productId\n        );\n\n        if (selectedProduct) {\n          openModal(selectedProduct);\n        } else {\n          console.error('Selected product not found:', productId);\n        }\n\n        // console.log(productId);\n        // console.log(results);\n      });\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function createCardMarkup(results) {\n  return results\n    .map(({ _id, name, img, category, size, price, popularity }) => {\n      return `\n        <li class=\"prod-item\" data-js-product-id=${_id}>   \n          <div class=\"prod-pic\">\n            <svg class=\"discont-prod\" width=\"60\" height=\"60\" style=\"visibility: hidden;\">\n              <use href=\"./images/icons.svg#shopping-cart\"></use>\n            </svg>\n            <img class=\"prod-img\" src=${img} alt=${name} loading=\"lazy\">\n          </div>\n          <h3 class=\"title-prod\">${name}</h3>\n          <div class=\"feature\">\n            <p class=\"feature-prod\">Category:<span class=\"feature-value\">${category}</span></p>\n            <p class=\"feature-prod\">Size:<span class=\"feature-value\">${size}</span></p>\n            <p class=\"feature-prod push\">Popularity:<span class=\"feature-value\">${popularity}</span></p>\n          </div>\n          <div class=\"buing-prod\">\n            <p class=\"price-prod\">&#36; ${price}</p>\n            <button class=\"buy-btn\" type=\"button\">\n              <svg class=\"buy-svg\" width=\"18\" height=\"18\">\n                <use href=\"./images/icons.svg#shopping-cart\"></use>\"></use>\n              </svg>\n            </button>\n          </div>\n        </li>\n      `;\n    })\n    .join('');\n}\n\ndisplayProducts();\nexport { displayProducts };\n","// import Pagination from 'tui-pagination';\n// import 'tui-pagination/dist/tui-pagination.css';\n// import { displayProducts } from './products';\n\n// const itemsPerPage = 9;\n// let totalItems = 540; //! Загальна кількість елементів  540 : 9 = 60 сторінок\n// let currentPage = 1;\n\n// const paginationContainer = document.getElementById('pagination');\n\n// // Ініціалізація екземпляру пагінації\n// const pagination = new Pagination(paginationContainer, {\n//   totalItems,\n//   itemsPerPage,\n//   visiblePages: 5,\n//   centerAlign: true,\n// });\n\n// pagination.on('beforeMove', (event) => {\n//   currentPage = event.page;\n//   updatePage(currentPage);\n// });\n\n// async function updatePage(pageNumber) {\n//   displayProducts(pageNumber);\n// }\n\n// updatePage(currentPage);\n\n// //! Варіант 2\n// import { displayProducts } from './products'; //! імпортувала\n\n// const paginationContainer = document.getElementById('pagination');\n\n// // Функція для відображення пагінації\n// async function displayPagination(currentPage, totalPages) {\n//   const paginationContainer = document.getElementById('pagination');\n//   paginationContainer.innerHTML = '';\n\n//   if (totalPages > 1) {\n//     const MAX_VISIBLE_PAGES = 5;\n\n//     // Додаємо посилання для поточної та сусідніх сторінок\n//     for (\n//       let i = Math.max(1, currentPage - 1);\n//       i <= Math.min(totalPages, currentPage + 1);\n//       i += 1\n//     ) {\n//       appendPageLink(i, i === currentPage);\n//     }\n\n//     // Додаємо \"...\"\n//     if (totalPages - currentPage > MAX_VISIBLE_PAGES - 2) {\n//       const ellipsis = document.createElement('span');\n//       ellipsis.textContent = '. . .';\n//       paginationContainer.appendChild(ellipsis);\n//     }\n\n//     // Додаємо посилання на останні дві сторінки\n//     for (\n//       let i = Math.max(\n//         totalPages - MAX_VISIBLE_PAGES + 4\n//         // totalPages - MAX_VISIBLE_PAGES + 1\n//       );\n//       i <= totalPages;\n//       i += 1\n//     ) {\n//       appendPageLink(i);\n//     }\n//   }\n// }\n\n// // Функція для додавання посилання на сторінку до пагінації\n// function appendPageLink(pageNumber, isActive = false) {\n//   const paginationContainer = document.getElementById('pagination'); // Додав цей рядок\n//   const li = document.createElement('li');\n//   const linkWrapper = document.createElement('div');\n//   linkWrapper.classList.add('pagination-link');\n//   const link = document.createElement('a');\n//   link.href = `javascript:void(0);`;\n//   link.textContent = pageNumber;\n\n//   if (isActive) {\n//     linkWrapper.classList.add('active');\n//   }\n\n//   link.addEventListener('click', () => onPageLinkClick(pageNumber));\n//   linkWrapper.appendChild(link);\n//   li.appendChild(linkWrapper);\n//   paginationContainer.appendChild(li);\n// }\n\n// // Обробник кліку на посилання пагінації\n// function onPageLinkClick(pageNumber) {\n//   displayProducts(pageNumber); //! змінила на імпортовану функцію\n//   displayPagination(pageNumber, 60); // Загальна кількість сторінок\n// }\n\n// // Відображення початкової сторінки\n// const initialPage = 1;\n// displayProducts(initialPage); //! змінила на імпортовану функцію\n// displayPagination(initialPage, 60); // Загальна кількість сторінок\n\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport { displayProducts } from './products';\nconst itemsPerPage = 9; // Кількість елементів на сторінці\nlet totalItems = 540; //! Загальна кількість елементів  540 : 9 = 60 сторінок\nlet currentPage = 1;\n// Отримання посилання на контейнер пагінації\nconst paginationContainer = document.getElementById('pagination');\n// Ініціалізація екземпляру пагінації\nconst pagination = new Pagination(paginationContainer, {\n  totalItems,\n  itemsPerPage,\n  visiblePages: 5, // Максимальна кількість видимих сторінок\n  centerAlign: true,\n});\n// Обробник події зміни сторінки\npagination.on('beforeMove', event => {\n  currentPage = event.page;\n  updatePage(currentPage);\n});\n// Функція для відображення продуктів та оновлення пагінації\nasync function updatePage(pageNumber) {\n  displayProducts(pageNumber);\n}\n// Відображення продуктів та налаштування пагінації\nupdatePage(currentPage);\n","import { getPopularProducts } from './get-api';\nimport { openModal } from './modal-product';\n\nconst popularList = document.querySelector('.popular-list');\n\ngetPopularProducts(5)\n  .then(data => {\n    popularList.insertAdjacentHTML('beforeend', createMarkup(data));\n\n    function onClick(event) {\n      let target = event.target;\n\n      if (target.closest('.popular-card')) {\n        const popularCard = target.closest('.popular-card');\n        const popularProductId = popularCard.getAttribute('data-js-product-id');\n        const selectedProduct = data.find(\n          product => product._id.toString() === popularProductId\n        );\n        openModal(selectedProduct);\n      } else if (target.closest('.btn-add')) {\n        target.closest('.btn-add').classList.add('visually-hidden');\n        alert('Product add to Order');\n      }\n    }\n\n    popularList.addEventListener('click', onClick);\n  })\n  .catch(error => {\n    console.error(error);\n  });\n\nfunction createMarkup(items) {\n  return items\n    .map(({ _id, name, img, category, popularity, size, price }) => {\n      // додав строку 15  та ретерн на 17\n      const firstDigit = parseInt(popularity.toString()[0]);\n\n      return `  <li class=\"popular-item\">\n      <button class=\"btn-add\" type=\"button\">\n        <svg class=\"svg-add\" width=\"12\" height=\"12\">\n          <use href=\"./images/icons.svg#shopping-cart\"></use>\n        </svg>\n      </button>\n      <span class=\"product-added\">\n        <svg class=\"svg-added\" width=\"12\" height=\"12\">\n          <use href=\"./images/icons.svg#check\"></use>\n        </svg>\n      </span>\n        <div class=\"popular-card\" data-js-product-id=${_id}>\n          <div class=\"popular-box-img\">\n            <img src=\"${img}\" alt=\"${name}\" loading=\"lazy\"  width=\"56\" />\n          </div>\n          <div class=\"popular-description\">\n            <h3 class=\"popular-card-title\">${name}</h3>\n            <p class=\"popular-card-text category\">Category: <span class=\"popular-text\">${category.replace(\n              '_',\n              ' '\n            )}</span></p>\n            <div class=\"card-descr\">\n              <p class=\"popular-card-text\">Size: <span class=\"popular-text\">${size}</span></p>\n              <p class=\"popular-card-text\">Popularity: <span class=\"popular-text\">${firstDigit}</span></p>\n            </div>\n          </div>\n        </div>\n      </li>`;\n    })\n    .join('');\n}\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://food-boutique.b.goit.study/api/';\n\nexport function getProducts() {\n  return axios.get('products/discount').then(response => response.data);\n}\n","const STORAGE_KEY = 'product-discount';\n\nexport function getData() {\n  try {\n    const data = localStorage.getItem(STORAGE_KEY);\n    return data ? JSON.parse(data) : [];\n  } catch (error) {\n    console.lof(error.message);\n  }\n}\n\nexport function saveData(items) {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(items));\n}\n","export function createMarkup(items = []) {\n  return items\n    .map(item => {\n      return ` <div class=\"card-product-discount\" data-id=\"${item._id}\">\n    <div class=\"card-product-wrapper\">\n        <img class=\"card-product-img\"\n            src=\"${item.img}\"\n            width=\"105\" height=\"105\" alt=\"${item.desc}\" />\n    </div>\n    <div class=\"card-product-info\">\n        <h3 class=\"card-product-title\">${item.name}</h3>\n        <div class=\"card-product-info-right\">\n            <p class=\"card-product-price\">${item.price}</p>\n\n            <button type=\"button\" class=\"card-product-btn\" >\n            <svg class=\"card-product-svg\" width=\"18\" height=\"18\">\n            <use href=\"./images/icons.svg#shopping-cart\"></use>\n          </svg>\n            </button>\n            <span class=\"product-added\">\n            <svg class=\"svg-added\" width=\"12\" height=\"12\">\n              <use href=\"./images/icons.svg#check\"></use>\n            </svg>\n          \n        </div>\n    </div>\n</div>\n`;\n    })\n    .join('');\n}\n","import { getProducts } from './api/discount-api';\nimport { getData, saveData } from './api/storage';\nimport { createMarkup } from './markup-discount';\n\nlet products = [];\nconst productEl = document.querySelector('.products-discount');\nconsole.log(productEl);\n\nasync function onLoad() {\n  const response = await getProducts();\n\n  products = response.slice(0, 2);\n\n  const markup = createMarkup(products);\n\n  addMarkup(markup);\n}\nonLoad();\n\nfunction addMarkup(markup) {\n  productEl.insertAdjacentHTML('beforeend', markup);\n}\n\nproductEl.addEventListener('click', onClick);\n\nfunction onClick(event) {\n  if (!event.target.closest('.cart-product-btn')) {\n    return;\n  }\n  const cardEl = event.target.closest('.cart-product-discount');\n  const id = cardEl.dataset.id;\n\n  //   console.log(data);\n  const items = getData();\n  if (items.find(item => id === item._id)) {\n    saveData(items.filter(item => id !== item._id));\n  } else {\n    const data = products.find(item => id === item._id);\n    items.push(data);\n    saveData(items);\n  }\n}\n","const scrollToTopButton = document.getElementById('scrollToTopBtn');\nconst scrollOffset = 360;\n\nwindow.onscroll = function () {\n  if (\n    document.body.scrollTop > scrollOffset ||\n    document.documentElement.scrollTop > scrollOffset\n  ) {\n    scrollToTopButton.classList.add('show');\n  } else {\n    scrollToTopButton.classList.remove('show');\n  }\n};\n\nscrollToTopButton.addEventListener('click', function () {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n"],"names":["BASE_URL","axios","getProductsByParams","keyword","category","page","limit","sort","params","getPopularProducts","countProducts","count","newWord","URL_BASE","getCategories","response","getByParams","productsListFilter","filterForm","filterSelect","createCard","results","_id","name","img","size","price","popularity","initialize","categories","showAllOption","option","updateLocalStorage","getLocalStorage","storedData","products","initialData","initialProducts","error","e","searchQuery","data","modalProduct","closeModalProductBtn","addToCartBtn","modalProductImage","modalProductName","modalProductCategory","modalProductSize","modalProductPopularity","modalProductDescription","modalProductPrice","openModal","product","outsideModalClick","closeModal","event","productsList","defaultParameters","addMarkup","el","markup","displayProducts","pageNumber","createCardMarkup","card","productId","selectedProduct","itemsPerPage","totalItems","currentPage","paginationContainer","pagination","Pagination","updatePage","popularList","createMarkup","onClick","target","popularProductId","items","firstDigit","getProducts","STORAGE_KEY","getData","saveData","item","productEl","onLoad","id","scrollToTopButton","scrollOffset"],"mappings":"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"}