{"version":3,"file":"commonHelpers.js","sources":["../src/js/get-api.js","../src/js/products.js","../src/js/pagination.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://food-boutique.b.goit.study/api/';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getProductsCategories() {\n  const response = await axios.get(`${BASE_URL}products/categories`);\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getProductsByParams(\n  keyword,\n  category,\n  page,\n  limit,\n  sort\n) {\n  const response = await axios.get(`${BASE_URL}products`, {\n    params: {\n      keyword,\n      category,\n      page,\n      limit,\n      [sort.key]: sort.value,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function getProductById(id) {\n  const response = await axios.get(`${BASE_URL}products/${id}`);\n\n  return response.data;\n}\n\nexport async function getPopularProducts(limit) {\n  const response = await axios.get(`${BASE_URL}products/popular`, {\n    params: { limit },\n  });\n\n  return response.data;\n}\n\nexport async function getDiscountProducts() {\n  const response = await axios.get(`${BASE_URL}products/discount`);\n\n  return response.data;\n}\n\nexport async function orderSubscriptionToNewProducts(email) {\n  const response = await axios.post(`${BASE_URL}subscription/`, {\n    email,\n  });\n\n  return response.data;\n}\n\nexport async function createNewOrder(email, [{ productId, amount }]) {\n  const response = await axios.post(`${BASE_URL}orders`, {\n    email,\n    products: [\n      {\n        productId,\n        amount,\n      },\n    ],\n  });\n\n  return response.data;\n}\n","import axios from 'axios';\n\nasync function getProducts() {\n  try {\n    const response = await axios.get(\n      'https://food-boutique.b.goit.study/api/products/'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Ошибка при получении данных:', error);\n    return [];\n  }\n}\n\nconst productsList = document.querySelector('.list-prod');\n\nfunction addMarkup(el, markup) {\n  el.innerHTML = markup;\n}\n\nasync function displayProducts() {\n  try {\n    const results = await getProducts();\n    const markup = createCardMarkup(results);\n    addMarkup(productsList, markup);\n  } catch (error) {\n    console.error('Ошибка при отображении продуктов:', error);\n  }\n}\n\nfunction createCardMarkup(results) {\n  return results\n    .map(({ id, name, img, category, size, price, popularity }) => {\n      return `\n        <li class=\"prod-item\" js-product-id=${id}>   \n          <div class=\"prod-pic\">\n            <svg class=\"discont-prod\" width=\"60\" height=\"60\" style=\"visibility: hidden;\">\n              <use href=\"\"></use>\n            </svg>\n            <img class=\"prod-img\" src=${img} alt=${name} loading=\"lazy\">\n          </div>\n          <h3 class=\"title-prod\">${name}</h3>\n          <div class=\"feature\">\n            <p class=\"feature-prod\">Category:<span class=\"feature-value\">${category}</span></p>\n            <p class=\"feature-prod\">Size:<span class=\"feature-value\">${size}</span></p>\n            <p class=\"feature-prod push\">Popularity:<span class=\"feature-value\">${popularity}</span></p>\n          </div>\n          <div class=\"buing-prod\">\n            <p class=\"price-prod\">${price}</p>\n            <button class=\"buy-btn\" type=\"button\">\n              <svg class=\"buy-svg\" width=\"18\" height=\"18\">\n                <use href=\"\"></use>\n              </svg>\n            </button>\n          </div>\n        </li>\n      `;\n    })\n    .join('');\n}\n\ndisplayProducts();\n","/**\n |============================\n | ОТРИМАЛИ ДАННІ З СЕРВЕРУ \n |============================\n*/\nasync function getProducts(pageNumber) {\n  const response = await fetch(\n    `https://food-boutique.b.goit.study/api/products?page=${pageNumber}&limit=9`\n  );\n  const data = await response.json();\n  return data.results;\n}\n// Кількість карток на сторінці\nconst cardsPerPage = 9;\n\n// Отримати контейнери для карток та пагінації\nconst cardsContainer = document.getElementById('cards-container');\nconst paginationContainer = document.getElementById('pagination');\n\n// Функція для відображення карток на сторінці\nasync function displayCards(page) {\n  const products = await getProducts(page);\n\n  cardsContainer.innerHTML = '';\n  products.forEach(product => {\n    const cardElement = createCard(product);\n    cardsContainer.appendChild(cardElement);\n  });\n}\n\n/**\n   |============================\n   | ТИМЧАСОВА КАРТКА ПРОДУКТУ  \n   |============================\n  */\nfunction createCard(product) {\n  const card = document.createElement('div');\n  card.className = 'card';\n\n  const img = document.createElement('img');\n  img.src = product.img;\n  img.alt = product.name;\n\n  const name = document.createElement('p');\n  name.textContent = product.name;\n\n  const price = document.createElement('p');\n  price.textContent = `Price: $${product.price}`;\n\n  card.appendChild(img);\n  card.appendChild(name);\n  card.appendChild(price);\n\n  return card;\n}\n\n/**\n   |============================\n   | PAGINATION NAVIGATION\n   |============================\n  */\n// Функція для відображення пагінації\nasync function displayPagination(currentPage, totalPages) {\n  paginationContainer.innerHTML = '';\n\n  if (totalPages > 1) {\n    const MAX_VISIBLE_PAGES = 5; // Максимальна кількість видимих сторінок\n\n    // Додаємо посилання для поточної та сусідніх сторінок\n    for (\n      let i = Math.max(1, currentPage - 1);\n      i <= Math.min(totalPages, currentPage + 1);\n      i += 1\n    ) {\n      appendPageLink(i, i === currentPage);\n    }\n\n    // Додаємо \"...\"\n    if (totalPages - currentPage > MAX_VISIBLE_PAGES - 2) {\n      const ellipsis = document.createElement('span');\n      ellipsis.textContent = '. . .';\n      paginationContainer.appendChild(ellipsis);\n    }\n\n    // Додаємо посилання на останні дві сторінки\n    for (\n      let i = Math.max(\n        totalPages - MAX_VISIBLE_PAGES + 4\n        // totalPages - MAX_VISIBLE_PAGES + 1\n      );\n      i <= totalPages;\n      i += 1\n    ) {\n      appendPageLink(i);\n    }\n  }\n}\n\n// Функція для додавання посилання на сторінку до пагінації\nfunction appendPageLink(pageNumber, isActive = false) {\n  const li = document.createElement('li');\n  const linkWrapper = document.createElement('div');\n  linkWrapper.classList.add('pagination-link');\n  const link = document.createElement('a');\n  link.href = `javascript:void(0);`;\n  link.textContent = pageNumber;\n\n  if (isActive) {\n    linkWrapper.classList.add('active');\n  }\n\n  link.addEventListener('click', () => onPageLinkClick(pageNumber));\n  linkWrapper.appendChild(link);\n  li.appendChild(linkWrapper);\n  paginationContainer.appendChild(li);\n}\n\n// Обробник кліку на посилання пагінації\nfunction onPageLinkClick(pageNumber) {\n  displayCards(pageNumber);\n  displayPagination(pageNumber, 60); // Загальна кількість сторінок\n}\n\n// Відображення початкової сторінки\nconst initialPage = 1;\ndisplayCards(initialPage);\ndisplayPagination(initialPage, 60); // Загальна кількість сторінок\n"],"names":["BASE_URL","axios","getProducts","error","productsList","addMarkup","el","markup","displayProducts","results","createCardMarkup","id","name","img","category","size","price","popularity","pageNumber","cardsContainer","paginationContainer","displayCards","page","products","product","cardElement","createCard","card","displayPagination","currentPage","totalPages","i","appendPageLink","ellipsis","isActive","li","linkWrapper","link","onPageLinkClick","initialPage"],"mappings":"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"}